			JMP	CRLF
		;
		;	PASK — INPUT MEW PRFLG AND PRDEP FROM TI
		;
		PASK
			LOA	#1
			STA	PRFLG
			JSR	CRLF
			LDA	#PRMSG
			JSR	OUTMS2
			JSR	GETBYT
			PHA
			JSR	CRLF
			LDA	#PRDMSG
			JSR	OUTMS2
			JSR	GETBYT
			STA	PRDEP
			PLA
			STA	PRFLG
			JMP	GRLF
		;
		;	PRMOV2 — SIMILAR TO PRMOVE
		;
		PRMOV2
			LDA	CURSOR
			STA	FROMB
			LDA	PRFLG
			AND	#$FE		;DO CR'S IF PRINTING ALPHA-BETA JUNK
			BEQ	J0Y800
			JSR	CRLF
			JSR	CRLF
			JSR	PRMOVE
			JSR	CRLF
			JSR	CRLF
			LDX	MOVE
			RTS
		JOY800
			JSR	PRMOVE
			LDX	MOVE
			RTS
			.PAGE

			*=*-1/256+1*256		;GO ON TO NEXT PAGE BOUNDARY
		MESSAG
		PRMSG	.BYTE	"ENTER PRFLG?",0
		PRDMSG	.BYTE	"ENTER PRDEP?",0
		GAMOVR	.BYTE	"GAME OVER",0
		BLKMSG	.BYTE	"COMPUTER IS DARK",0
		WHMSG	.BYTE	"COMPUTER IS WHITE",0
		B112	.BYTE	"DARK STARTS ON 1-12",0
		W112	.BYTE	"WHITE STARTS ON 1-12",0
		TOPLFT	.BYTE	"TOP LEFT SQUARE IS ",0
			.PAGE
		JLERR	.BYTE	"JOYLP ERR0R",0
		QDEPTH	.BYTE	"DEPTH=",0
		QINDEX	.BYTE	"INDEX=",0
		QALPHA	.BYTE	"ALPHA(DEPTH)=",0
		QBETA	.BYTE	"ALPHA(DEPTH-1)=",0
		QALP1	.BYTE	"ALPHA(DEPTH+1)=",0
		QHPIECE	.BYTE	"HPTECE=",0
